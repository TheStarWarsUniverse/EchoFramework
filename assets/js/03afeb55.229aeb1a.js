"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[537],{64426:function(e){e.exports=JSON.parse('{"functions":[{"name":"Connect","desc":"Connects a function to the signal, which will be called anytime the signal is fired.","params":[{"name":"Name","desc":"","lua_type":"string"},{"name":"Function","desc":"","lua_type":"function"}],"returns":[],"function_type":"method","source":{"line":23,"path":"src/EchoInstaller/EchoServer/Functions/Network.lua"}},{"name":"Disconnect","desc":"Disconnects a function from listening to remote event.","params":[{"name":"Name","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":34,"path":"src/EchoInstaller/EchoServer/Functions/Network.lua"}},{"name":"FireClient","desc":"Fires the signal at the specified client with any arguments.","params":[{"name":"Client","desc":"","lua_type":"Client Instance"},{"name":"Name","desc":"","lua_type":"string"},{"name":"[any]","desc":"","lua_type":"any?"}],"returns":[],"function_type":"method","source":{"line":45,"path":"src/EchoInstaller/EchoServer/Functions/Network.lua"}},{"name":"FireAllClients","desc":"Fires the signal at the clients with any arguments.","params":[{"name":"Name","desc":"","lua_type":"string"},{"name":"[any]","desc":"","lua_type":"any?"}],"returns":[],"function_type":"method","source":{"line":55,"path":"src/EchoInstaller/EchoServer/Functions/Network.lua"}},{"name":"InvokeClient","desc":"Invoke the signal at the client with any arguments and expected return from the client.","params":[{"name":"Client","desc":"","lua_type":"Client Instance"},{"name":"Name","desc":"","lua_type":"string"},{"name":"[any]","desc":"","lua_type":"any?"}],"returns":[],"function_type":"method","source":{"line":66,"path":"src/EchoInstaller/EchoServer/Functions/Network.lua"}},{"name":"CreateService","desc":"Constructs a new service.\\n```lua\\nlocal EchoService = Echo:CreateService({\\n\\tName = \\"EchoService\\",\\n\\tClient = {}\\n})\\n\\nfunction EchoService.Client:Example(Player: Instance, ...)\\n\\tprint(\\"Example\\")\\nend\\n\\nfunction EchoService:EchoStart()\\n\\tprint(\\"Echo Start\\")\\nend\\n\\nfunction EchoService:EchoInit()\\n\\tprint(\\"Echo Init\\")\\nend\\n\\nreturn EchoService\\n```","params":[{"name":"ServiceInfo","desc":"","lua_type":"ServiceDefine"}],"returns":[{"desc":"","lua_type":"Service"}],"function_type":"method","source":{"line":77,"path":"src/EchoInstaller/EchoServer/Functions/Services.lua"}},{"name":"GetService","desc":"Get Services by its name.","params":[{"name":"ServiceName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Service?"}],"function_type":"method","source":{"line":109,"path":"src/EchoInstaller/EchoServer/Functions/Services.lua"}},{"name":"GetWallySharedPackages","desc":"Get a shared wally package from server.","params":[{"name":"PackageName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Wally Package"}],"function_type":"method","source":{"line":18,"path":"src/EchoInstaller/EchoServer/Functions/Wally.lua"}},{"name":"GetWallyServerPackages","desc":"Get a server wally package from server.","params":[{"name":"PackageName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Wally Package"}],"function_type":"method","source":{"line":29,"path":"src/EchoInstaller/EchoServer/Functions/Wally.lua"}}],"properties":[],"types":[{"name":"ServiceDefine","desc":"Used to define a service while creating it in \\"CreateService\\"","fields":[{"name":"Name","lua_type":"string","desc":""},{"name":"Client","lua_type":"table?","desc":""},{"name":"[any]","lua_type":"any","desc":""}],"source":{"line":15,"path":"src/EchoInstaller/EchoServer/Functions/Services.lua"}},{"name":"Service","desc":"","fields":[{"name":"Name","lua_type":"string","desc":""},{"name":"Client","lua_type":"ServiceClient","desc":""},{"name":"[any]","lua_type":"any","desc":""}],"source":{"line":28,"path":"src/EchoInstaller/EchoServer/Functions/Services.lua"}},{"name":"ServiceClient","desc":"","fields":[{"name":"Server","lua_type":"Service","desc":""},{"name":"[any]","lua_type":"any","desc":""}],"source":{"line":40,"path":"src/EchoInstaller/EchoServer/Functions/Services.lua"}}],"name":"EchoServer","desc":"The server script of Echo framework.","realm":["Server"],"source":{"line":10,"path":"src/EchoInstaller/EchoServer/init.lua"}}')}}]);